// Generates lunr compatible search index
// from HTMl generated by asciidoctor

const cheerio = require('cheerio');
var fs = require('fs');
var lunr = require('lunr');

try {
    var filename = process.argv.slice(2)[0] || 'index.html';
    var htmlFile = fs.readFileSync(filename);
} catch (err) {
    console.log("\nfile read error\n");
    process.exit(1);
}

const $ = cheerio.load( htmlFile );
const sectionSelector = "#content .sect1, #content .sect2, #content .sect3";
const sectionContext = "#content .sect2, #content .sect3";

function elementToJSON(element) {
    var ref = element.find("h2, h3, h4").attr('id');
    var title = element.find("h2, h3, h4").text();
    var body = element.find("p").text();
    return { id: ref, title: title, body: body };
}

function HTML2JSON(selector, context) {
    // get all matches for the content selector
    var matches = $(selector, context);
    var entries = [];
    matches.each(function(idx, match) {
        entries.push(elementToJSON($(match)));
    });
    return entries;
}

var idx = lunr(function() {
    // define searchable fields
    this.ref("id");
    this.field("title");
    this.field("body");

    this.k1(1.3);
    this.b(0);

    // parse all HTML elements and convert to JSON
    var documents = HTML2JSON(sectionSelector, sectionContext);

    // adding all entires to lunr
    documents.forEach(function(doc) {
        this.add(doc);
    }, this);
});

fs.writeFileSync('searchIndex.json', JSON.stringify(idx));
